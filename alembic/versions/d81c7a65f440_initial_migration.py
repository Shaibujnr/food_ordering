"""initial migration

Revision ID: d81c7a65f440
Revises: 
Create Date: 2021-06-08 04:01:41.597401

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy_utils import UUIDType, JSONType, ScalarListType


# revision identifiers, used by Alembic.
revision = "d81c7a65f440"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admins",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("email_verified_on", sa.DateTime(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "couriers",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_categories",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("email_verified_on", sa.DateTime(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("phone_number_verified_on", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "vendors",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "contact_informations",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "vendor_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["vendors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "courier_users",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "courier_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["courier_id"],
            ["couriers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_packages",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("image_url", sa.String(), nullable=False),
        sa.Column("items", ScalarListType(), nullable=True),
        sa.Column("price", sa.String(), nullable=False),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.Column(
            "vendor_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["vendors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "open_informations",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "vendor_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("day", sa.String(), nullable=False),
        sa.Column("open_from", sa.Time(), nullable=True),
        sa.Column("open_to", sa.Time(), nullable=True),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["vendors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("vendor_id", "day"),
    )
    op.create_table(
        "user_courier_feedbacks",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "user_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column(
            "courier_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("feedback", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["courier_id"],
            ["couriers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("courier_id", "user_id"),
    )
    op.create_table(
        "user_vendor_feedbacks",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "user_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column(
            "vendor_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("feedback", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["vendors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("vendor_id", "user_id"),
    )
    op.create_table(
        "vendor_users",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "vendor_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["vendors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "food_packages_food_categories_association",
        sa.Column(
            "food_package_id",
            UUIDType(binary=False),
            nullable=True,
        ),
        sa.Column(
            "category_id",
            UUIDType(binary=False),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["food_categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["food_package_id"],
            ["food_packages.id"],
        ),
    )
    op.create_table(
        "orders",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "user_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column(
            "vendor_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column(
            "courier_user_id",
            UUIDType(binary=False),
            nullable=True,
        ),
        sa.Column("vendor_accepted", sa.Boolean(), nullable=True),
        sa.Column("courier_accepted", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["courier_user_id"],
            ["courier_users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["vendors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_food_package_feedbacks",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "user_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column(
            "food_package_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("feedback", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["food_package_id"],
            ["food_packages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("food_package_id", "user_id"),
    )
    op.create_table(
        "order_events",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", UUIDType(binary=False), nullable=False),
        sa.Column(
            "order_id",
            UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column("event_type", sa.String(), nullable=False),
        sa.Column("payload", JSONType(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_events")
    op.drop_table("user_food_package_feedbacks")
    op.drop_table("orders")
    op.drop_table("food_packages_food_categories_association")
    op.drop_table("vendor_users")
    op.drop_table("user_vendor_feedbacks")
    op.drop_table("user_courier_feedbacks")
    op.drop_table("open_informations")
    op.drop_table("food_packages")
    op.drop_table("courier_users")
    op.drop_table("contact_informations")
    op.drop_table("vendors")
    op.drop_table("users")
    op.drop_table("food_categories")
    op.drop_table("couriers")
    op.drop_table("admins")
    # ### end Alembic commands ###
